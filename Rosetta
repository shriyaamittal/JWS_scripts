https://www.rosettacommons.org/demos/latest/tutorials/install_build/install_build#installing-rosetta

# Download v3.12

curl -o rosetta_bin_linux_3.12_bundle.tgz -u Academic_User:<<pwd>> https://www.rosettacommons.org/downloads/academic/3.12/rosetta_bin_linux_3.12_bundle.tgz

# untar file

cd rosetta*/main/source
./scons.py -j 2 mode=release bin
<2> : # of cores
My Mac mini has 6 cores. Check using the following command,
system_profiler SPHardwareDataType

Add the following to .bash_profile:
export PATH=$PATH:/path/to/rosetta/bin 
example, export PATH=$PATH:/Users/mittal/Desktop/rosetta_bin_mac_2020.08.61146_bundle/main/source/bin

Tutorial: https://www.rosettacommons.org/demos/latest/tutorials/scoring/scoring
I was sort of able to follow along with the executable below
./Desktop/rosetta_bin_mac_2020.08.61146_bundle/main/source/bin/score_jd2.macosclangrelease -in:file:s ./Downloads/1qys.pdb -out:pdb

####
RNA applications
####

export ROSETTA="/Users/mittal/Desktop/rosetta_bin_mac_2020.08.61146_bundle/"
export RNA_TOOLS=$ROSETTA/tools/rna_tools/
export PATH=$RNA_TOOLS/bin/:$PATH
export PYTHONPATH=$PYTHONPATH:$RNA_TOOLS/bin/

Check using the following,
python $RNA_TOOLS/sym_link.py
rna_helix.py -h

rna_denovo.macosclangrelease -help

Tutorial: https://www.rosettacommons.org/docs/latest/FARFAR2
rna_denovo.macosclangrelease -sequence "ucaggu aagcag" -secstruct "(....( )....)" -nstruct <n> -out:file:silent test.out -minimize_rna 

or 

rna_denovo.macosclangrelease -fasta <sequence_filename> -secstruct_file <structure_filename> -nstruct <n> -out:file:silent <output_filename> -minimize_rna <true_or_false> 

The output file, ex. test.out, will look like garbage. To extract the pdb file from it, 
extract_pdbs.macosclangrelease -in:file:silent test.out -tags $TAG

The following prints the score and structure tags,
grep "^SCORE:" ${structure}.out | grep -v description | awk '{print $2, $NF}'
## Print structure with lowest REU Score
grep "^SCORE:" ${structure}.out | grep -v description | sort -nk2 | head -n 1 | awk '{print $NF}'
## From the top "x" lowest REU value structures, print one with lowest RMSD. Here x=10
grep "^SCORE:" ${structure}.out | grep -v description | sort -nk2 | head -n 10 | sort -nk24 | head -n 1 | awk '{print $NF}'


-obligate_pair 3 22 , to include a base-pair 


## rna_cluster

NN=10
RR=5
rm clustered.out
rna_cluster.macosclangrelease -in:file:silent <filename>.out -out:file:silent clustered.out -cluster:radius $RR -nstruct $NN
extract_pdbs.macosclangrelease -in:file:silent clustered.out -tags $TAG
grep "^SCORE:" clustered.out | grep -v description | awk '{print $2, $NF}'


## Base interaction features
grep "^SCORE:" <filename>.out | grep -v description | awk '{print $2, $24, $25, $26 , $NF}'

$24: N_WC
$25: N_NWC
$26: N_BS

## Change to excel-readable format

grep "^SCORE:" <filename>.out | grep -v description | awk -v OFS=, '{print $2, $24, $25, $26 , $NF}' > data.csv

## Suitename conformers/outliers

rna_suitename.macosclangrelease -s <PDB filename>

rna_suitename.macosclangrelease -s <PDB filename> > suitename.txt
grep -e "Residue " suitename.txt | awk -v OFS=, '{print $1, $4, $5, $6,$NF}' > data.csv
